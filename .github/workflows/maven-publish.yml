name: Maven release and publish

on:
  workflow_dispatch:
    branches:
      - master
    inputs:
      release-version:
        description: 'RELEASE_VERSION'
        required: true
      create-github-release:
        description: 'CREATE_GITHUB_RELEASE'
        type: boolean
      publish-maven-central:
        description: 'PUBLISH_TO_MAVEN_CENTRAL'
        type: boolean

jobs:
  mvn-release:
    name: Update POM version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        java: [ '11' ]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.release-version }} -DgenerateBackupPoms=false
      - name: Upload changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update to version ${{ github.event.inputs.release-version }}
  release-on-push:
    name: Create Github release
    needs: mvn-release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ github.event.inputs.release-version }}
          path: ./CHANGELOG.md
      - name: Create release
        if: ${{ github.event.inputs.create-github-release == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release-version }}
          name: ${{ github.event.inputs.release-version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: false
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs: release-on-push
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        java: [ '11' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MVN_CENTRAL_GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'
      - name: Maven build
        run: |
          mvn clean install -U
      - name: Publish to the Maven Central Repository
        if: ${{ github.event.inputs.publish-maven-central == 'true' }}
        run: mvn --batch-mode clean deploy -Psign-artifacts -Darguments=-Dgpg.passphrase=${{ secrets.GPG_SIGNING_PASSPHRASE }} -X
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASS }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_PASSPHRASE }}
